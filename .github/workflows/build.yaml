name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    if: ${{ github.triggering_actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Log in to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: GIT_SHA=${{ github.sha }}
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Rancher
        uses: th0th/rancher-redeploy-workload@v0.82
        env:
          DEBUG: 'true'
          DISABLE_OUTPUT: 'false'
          RANCHER_BEARER_TOKEN: ${{ secrets.RANCHER_SECRET }}
          RANCHER_CLUSTER_ID: 'local'
          RANCHER_NAMESPACE: 'hadisplay'
          RANCHER_PROJECT_ID: 'p-tb6hn'
          RANCHER_URL: ${{ vars.RANCHER_URL }}
          RANCHER_WORKLOADS: 'hadisplay'
          TLS_SKIP_VERIFICATION: 'false'


